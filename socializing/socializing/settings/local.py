"""
Django settings for bookmarks project.

Generated by 'django-admin startproject' using Django 1.9.6.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os
from django.core.urlresolvers import reverse_lazy
from .password import (secret_key,
                       dbname,
                       dbuser,
                       dbpass_local,
                       social_auth_facebook_key,
                       social_auth_facebook_secret,
                       social_auth_twitter_key,
                       social_auth_twitter_secret,
                       social_auth_google_auth2_key,
                       social_auth_google_auth2_secret,
                       no_recaptcha_site_key,
                       no_recaptcha_secret_key)


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = secret_key

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # created apps
    'account',
    'actions',
    'posts',
    # 3-rd party libraries
    'crispy_forms',
    'el_pagination',
    'nocaptcha_recaptcha',
    'social_django',
    'social.apps.django_app.default',
]

REDACTOR_UPLOAD = 'redactor_uploads/'

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # social django middleware
    'social_django.middleware.SocialAuthExceptionMiddleware',


]

ROOT_URLCONF = 'socializing.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                "django.core.context_processors.request",
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

                # social django context processors
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = 'socializing.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': dbname,
        'USER': dbuser,
        'PASSWORD': dbpass_local,
        'HOST': 'localhost',
        'PORT': '5432',
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/


# STATIC_URL = '/static_storage/'
# STATICFILES_DIRS = [os.path.join(BASE_DIR, "static_storage")]
# STATIC_ROOT = os.path.join(BASE_DIR, 'static_storage/')


STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, "static_storage")]
STATIC_ROOT = os.path.join(os.path.dirname(BASE_DIR), "static")

# MEDIA_URL = '/media/'
# MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(os.path.dirname(BASE_DIR), "media")


LOGIN_REDIRECT_URL = reverse_lazy('home')
LOGIN_URL = reverse_lazy('login')
LOGOUT_URL = reverse_lazy('logout')


# python social auth authentication backends
AUTHENTICATION_BACKENDS = [
    'social_core.backends.google.GoogleOAuth2',
    'social_core.backends.twitter.TwitterOAuth',
    'social_core.backends.facebook.FacebookOAuth2',

    'django.contrib.auth.backends.ModelBackend',
]

SOCIAL_AUTH_FACEBOOK_KEY = social_auth_facebook_key
SOCIAL_AUTH_FACEBOOK_SECRET = social_auth_facebook_secret

SOCIAL_AUTH_TWITTER_KEY = social_auth_twitter_key
SOCIAL_AUTH_TWITTER_SECRET = social_auth_twitter_secret

SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = social_auth_google_auth2_key
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = social_auth_google_auth2_secret


NORECAPTCHA_SITE_KEY = no_recaptcha_site_key
NORECAPTCHA_SECRET_KEY = no_recaptcha_secret_key


CRISPY_TEMPLATE_PACK = 'bootstrap3'


# other way to get_absolute_url method
ABSOLUTE_URL_OVERRIDES = {
    'auth.user': lambda u: reverse_lazy('user_profile', args=[u.username])
}



